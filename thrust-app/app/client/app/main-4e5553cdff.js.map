{"version":3,"sources":["app/app.module.js","app/components/navbar/navbar.directive.js","app/main.js","app/services/logger.service.js","app/services/auth.service.js","app/login/login.controller.js","app/app.route.js","app/app.config.js"],"names":["angular","module","thrustNavbar","NavbarController","$state","$cookies","isActive","Boolean","get","logout","remove","go","vm","this","$inject","directive","restrict","templateUrl","scope","controller","controllerAs","logger","$log","toastr","error","message","data","onlyLog","title","info","success","warning","warn","service","showToasts","log","debug","factory","authService","$http","login","user","password","loginSucceeded","response","loginFailed","post","name","then","LoginController","initLogin","showMenu","console","getObject","loginSubmit","routerConfig","$stateProvider","$urlRouterProvider","state","url","otherwise","config","$logProvider","$httpProvider","toastrConfig","debugEnabled","defaults","useXDomain","headers","common","allowHtml","timeOut","positionClass","preventDuplicates","progressBar"],"mappings":"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","file":"app/main-4e5553cdff.js","sourcesContent":["(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('thrust-app', [\n\t\t\t'ngAnimate',\n\t\t\t'ngCookies',\n\t\t\t'ngSanitize',\n\t\t\t'ngMessages',\n\t\t\t'ngAria',\n\t\t\t'ui.router',\n\t\t\t'ui.bootstrap',\n\t\t\t'toastr'\n\t\t]);\n}());\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('thrust-app')\n\t\t.directive('thrustNavbar', thrustNavbar);\n\n\t/** @ngInject */\n\tfunction thrustNavbar() {\n\t\tvar directive = {\n\t\t\trestrict: 'E',\n\t\t\ttemplateUrl: 'app/components/navbar/navbar.html',\n\t\t\tscope: {},\n\t\t\tcontroller: NavbarController,\n\t\t\tcontrollerAs: 'nav'\n\t\t};\n\n\t\treturn directive;\n\n\t\t/** @ngInject */\n\t\tfunction NavbarController($state, $cookies) {\n\t\t\tvar vm = this;\n\n\t\t\tvm.isActive = isActive;\n\t\t\tvm.logout = logout;\n\n\t\t\tfunction isActive() {\n\t\t\t\treturn Boolean($cookies.get('thrust_connected'));\n\t\t\t}\n\n\t\t\tfunction logout() {\n\t\t\t\t$cookies.remove('thrust_connected');\n\t\t\t\t$state.go('home');\n\t\t\t}\n\t\t}\n\t}\n})();\n",null,"(function() {\n\t'use strict';\n\n\tangular\n\t\t.module('thrust-app')\n\t\t.factory('logger', logger);\n\n\tlogger.$inject = ['$log', 'toastr'];\n\n\tfunction logger($log, toastr) {\n\t\tvar service = {\n\t\t\tshowToasts: true,\n\n\t\t\terror   : error,\n\t\t\tinfo    : info,\n\t\t\tsuccess : success,\n\t\t\twarning : warning,\n\n\t\t\t// straight to console; bypass toastr\n\t\t\t// if you still would like to only log error, warning or info use onlyLog argument\n\t\t\tlog     : $log.log,\n\t\t\tdebug   : $log.debug\n\t\t};\n\n\t\treturn service;\n\t\t/////////////////////\n\n\t\tfunction error(message, data, onlyLog, title) {\n\t\t\tif (typeof onlyLog === 'undefined') {\n\t\t\t\ttoastr.error(message, title);\n\t\t\t}\n\t\t\t$log.error('Error: ' + message, data);\n\t\t}\n\n\t\tfunction info(message, data, onlyLog, title) {\n\t\t\tif (typeof onlyLog === 'undefined') {\n\t\t\t\ttoastr.info(message, title);\n\t\t\t}\n\t\t\t$log.info('Info: ' + message, data);\n\t\t}\n\n\t\tfunction success(message, data, onlyLog, title) {\n\t\t\tif (typeof onlyLog === 'undefined') {\n\t\t\t\ttoastr.success(message, title);\n\t\t\t}\n\t\t\t$log.info('Success: ' + message, data);\n\t\t}\n\n\t\tfunction warning(message, data, onlyLog, title) {\n\t\t\tif (typeof onlyLog === 'undefined') {\n\t\t\t\ttoastr.warning(message, title);\n\t\t\t}\n\t\t\t$log.warn('Warning: ' + message, data);\n\t\t}\n\t}\n}());\n","(function () {\n\t'use strict';\n\n\t// Data Service Factory used for Authentication\n\tangular\n\t\t.module('thrust-app')\n\t\t.factory('authService', authService);\n\n\t/** @ngInject */\n\tfunction authService($http, logger) {\n\n\t\tvar service = {\n\t\t\tlogin: login\n\t\t};\n\n\t\treturn service;\n\n\t\t////////////\n\n\t\tfunction login(user, password) {\n\t\t\treturn $http.post('/api/auth/login', { name: user, password: password })\n\t\t\t\t.then(loginSucceeded)\n\t\t\t\t.catch(loginFailed);\n\n\t\t\tfunction loginSucceeded(response) {\n\t\t\t\treturn response.data;\n\t\t\t}\n\n\t\t\tfunction loginFailed(error) {\n\t\t\t\tlogger.error('XHR Failed for Login.');\n\t\t\t\tlogger.log(error.data);\n\t\t\t}\n\t\t}\n\t}\n\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('thrust-app')\n\t\t.controller('LoginController', LoginController);\n\n\t/** @ngInject */\n\tfunction LoginController($state, $cookies, logger) {\n\t\tvar vm = this;\n\n\t\tvm.showMenu = false;\n\t\tvm.user = '';\n\t\tvm.password = '';\n\t\tvm.loginSubmit = loginSubmit;\n\n\t\tinitLogin();\n\n\t\tfunction initLogin() {\n\t\t\tvm.showMenu = false;\n\t\t\tconsole.log($cookies.getObject('thrust_connected'));\n\n\t\t\tif ($cookies.getObject('thrust_connected')) {\n\t\t\t\tlogger.info(\"Connected!\");\n\t\t\t\t//$state.go('Main Page');\n\t\t\t}\n\t\t}\n\n\t\tfunction loginSubmit() {\n\t\t\t\n\t\t}\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('thrust-app')\n\t\t.config(routerConfig);\n\n\t/** @ngInject */\n\tfunction routerConfig($stateProvider, $urlRouterProvider) {\n\n\t\t$stateProvider\n\t\t\t.state('home', {\n\t\t\t\turl: '/',\n\t\t\t\ttemplateUrl: 'app/login/login.html',\n\t\t\t\tcontroller: 'LoginController',\n\t\t\t\tcontrollerAs: 'login'\n\t\t\t});\n\n\t\t$urlRouterProvider.otherwise('/');\n\t}\n}());\n","/* eslint no-param-reassign: \"warn\" */\n(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('thrust-app')\n\t\t.config(config);\n\n\t/** @ngInject */\n\tfunction config($logProvider, $httpProvider, toastrConfig) {\n\t\t// Enable log\n\t\t$logProvider.debugEnabled(true);\n\n\t\t$httpProvider.defaults.useXDomain = true;\n\t\tdelete $httpProvider.defaults.headers.common['X-Requested-With'];\n\n\t\t// Set options third-party lib\n\t\ttoastrConfig.allowHtml = true;\n\t\ttoastrConfig.timeOut = 3000;\n\t\ttoastrConfig.positionClass = 'toast-bottom-right';\n\t\ttoastrConfig.preventDuplicates = false;\n\t\ttoastrConfig.progressBar = true;\n\t}\n}());\n"],"sourceRoot":"/source/"}
{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is the API definition for Thrust Ethereum",
    "version" : "1.0.0",
    "title" : "Thrust Ethereum",
    "contact" : {
      "name" : "Thrust ID Team"
    },
    "license" : {
      "name" : "MIT"
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/ArthurManz/thrust-ethereum/1.0.0",
  "schemes" : [ "https" ],
  "paths" : {
    "/refugee" : {
      "get" : {
        "summary" : "Searches refugees",
        "description" : "By passing in the appropriate options, you can filter your search\n",
        "operationId" : "searchRefugees",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "firstName",
          "in" : "query",
          "description" : "Pass an optional search string for searching by First Name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastName",
          "in" : "query",
          "description" : "Pass an optional search string for searching by Last Name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "rating",
          "in" : "query",
          "description" : "Pass an optional search string for searching by Rating",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "country",
          "in" : "query",
          "description" : "Pass an optional search string for searching by Country",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "documentId",
          "in" : "query",
          "description" : "Pass an optional search string for searching by Document ID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RefugeeOverview"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      },
      "post" : {
        "summary" : "Adds a new refugee",
        "description" : "Adds a new refugee to the system",
        "operationId" : "addNewRefugee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "New refugee registration information",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RefugeeCreation"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Refugee created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "found a registered refugee in the blockchain {{id}}"
          }
        }
      }
    },
    "/refugee/{refugeeId}" : {
      "get" : {
        "summary" : "Searches refugees",
        "description" : "By passing in the appropriate options, you can filter your search\n",
        "operationId" : "searchRefugee",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "refugeeId",
          "in" : "path",
          "description" : "The address of the refugee smart contract.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "search for refugee details, for the given refugeeId",
            "schema" : {
              "$ref" : "#/definitions/RefugeeDetails"
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "summary" : "Modifies refugee's details",
        "description" : "Adds a refugee to the system",
        "operationId" : "addModifyExistingRefugee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "refugeeId",
          "in" : "path",
          "description" : "The address of the refugee smart contract.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Modify or Add refugee details",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RefugeeDetails"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "details added or modified succesfully"
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    }
  },
  "definitions" : {
    "RefugeeOverview" : {
      "type" : "object",
      "required" : [ "documentId", "firstName", "id", "lastName", "rating", "status" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "0x72ba7d8e73fe8eb666ea66babc8116a41bfb10e2"
        },
        "firstName" : {
          "type" : "string",
          "example" : "Arturo"
        },
        "lastName" : {
          "type" : "string",
          "example" : "Manzaneda"
        },
        "status" : {
          "type" : "string",
          "example" : "Created"
        },
        "documentId" : {
          "type" : "string",
          "example" : "44793290A"
        },
        "rating" : {
          "type" : "string",
          "enum" : [ "A", "B", "C", "D" ],
          "default" : "A"
        }
      }
    },
    "RefugeeCreation" : {
      "properties" : {
        "firstName" : {
          "type" : "string",
          "example" : "Arturo"
        },
        "lastName" : {
          "type" : "string",
          "example" : "Manzaneda"
        },
        "documentId" : {
          "type" : "string",
          "example" : "44793290A"
        },
        "documentType" : {
          "type" : "string",
          "example" : "ID"
        },
        "birthDate" : {
          "type" : "string",
          "format" : "date",
          "example" : "1988-05-10"
        },
        "civilStatus" : {
          "type" : "string",
          "enum" : [ "Single", "Divorced", "Separated", "Widow", "Living common law", "Married" ],
          "default" : "Single"
        },
        "gender" : {
          "type" : "string",
          "enum" : [ "Male", "Female" ],
          "default" : "Male"
        },
        "fingerprintHash" : {
          "type" : "string",
          "example" : "1929233838383833848484848484844747474",
          "maxLength" : 1000
        },
        "photoHash" : {
          "type" : "string",
          "example" : "3393939393939393939384746758484448488",
          "maxLength" : 1000
        },
        "registrationCountry" : {
          "type" : "string",
          "example" : "Netherlands"
        },
        "originCountry" : {
          "type" : "string",
          "example" : "Syria"
        },
        "bloodGroup" : {
          "type" : "string",
          "enum" : [ "A", "B", "AB", "0" ],
          "default" : "A"
        }
      }
    },
    "RefugeeDetails" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "0x72ba7d8e73fe8eb666ea66babc8116a41bfb10e2"
        },
        "firstName" : {
          "type" : "string",
          "example" : "Arturo"
        },
        "lastName" : {
          "type" : "string",
          "example" : "Manzaneda"
        },
        "documentId" : {
          "type" : "string",
          "example" : "44793290A"
        },
        "documentType" : {
          "type" : "string",
          "example" : "ID"
        },
        "birthDate" : {
          "type" : "string",
          "format" : "date",
          "example" : "1988-05-10"
        },
        "civilStatus" : {
          "type" : "string",
          "enum" : [ "Single", "Divorced", "Separated", "Widow", "Living common law", "Married" ],
          "default" : "Single"
        },
        "gender" : {
          "type" : "string",
          "enum" : [ "Male", "Female" ],
          "default" : "Female"
        },
        "fingerprintHash" : {
          "type" : "string",
          "example" : "1929233838383833848484848484844747474",
          "maxLength" : 1000
        },
        "photoHash" : {
          "type" : "string",
          "example" : "3393939393939393939384746758484448488",
          "maxLength" : 1000
        },
        "registrationCountry" : {
          "type" : "string",
          "example" : "Netherlands"
        },
        "originCountry" : {
          "type" : "string",
          "example" : "Syria"
        },
        "bloodGroup" : {
          "type" : "string",
          "enum" : [ "A", "B", "AB", "0" ],
          "default" : "A"
        }
      }
    }
  }
}